Welcome!
library(sf)
library(lubridate)
library(rpart)
library(leaflet)
library(rgdal)
library(tidyverse)
url <- "https://www.dropbox.com/scl/fi/405wijo9gqmsdgkr27lwn/Caminata_de_ma_ana.gpx?rlkey=8djmzud94qpozq8smoq18ozx4&dl=1"
am_walk <- st_read(dsn=url,layer="track_points")
library(sf)
library(lubridate)
library(mgcv)
library(mgcv)
library(rpart)
library(leaflet)
library(rgdal)
library(tidyverse)
url <- "https://www.dropbox.com/scl/fi/slb8wn1np1ntzhaw30z58/Caminata_de_ma_ana.gpx?rlkey=vv5vsiuhoozzc1q0mfbzm2aof&st=ouslm2cu&dl=1"
am_walk <- st_read(dsn=url,layer="track_points")
am_walk <- st_read(dsn=url,layer="track_points")
# Change time to a character
am_walk$time <- as.character(am_walk$time)
# Change time to a character
am_walk$time <- as.character(am_walk$time)
# Drop all extra information/data other than location and time
am_walk <- am_walk[,5]
# Visualize morning walk
map_leaflet <- leaflet() %>%
addProviderTiles(providers$Esri.WorldImagery)
map_leaflet %>%
addCircleMarkers(data = am_walk,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Write to kml file to view in google earth pro
st_write(am_walk,"am_walk.kml",driver = "kml")
# Change date/time to class "POSIXct"
am_walk$time <- as_datetime(am_walk$time,tz="America/Chicago")
# Plot time series of spatial locations
par(mfrow=c(2,1))
plot(data.frame(am_walk)[[1]],st_coordinates(am_walk)[,1],pch="*",xlab="Time",ylab="Longitude")
plot(data.frame(am_walk)[[1]],st_coordinates(am_walk)[,2],pch="*",xlab="Time",ylab="Lattitude")
# Make data.frame for data analysis
# Note that time is in seconds since the start of the race
df.am_walk <- data.frame(t = as.numeric(am_walk$time - am_walk$time[1]),
s1 = st_coordinates(am_walk)[,1],
s2 = st_coordinates(am_walk)[,2])
# Make data.frame for data analysis
# Note that time is in seconds since the start of the race
df.am_walk <- data.frame(t = as.numeric(am_walk$time - am_walk$time[1]),
s1 = st_coordinates(am_walk)[,1],
s2 = st_coordinates(am_walk)[,2])
```{r}
head(df.am_walk)
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- lm(s1 ~ poly(t,degree=10,raw=TRUE),data=df.am_walk)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- lm(s2 ~ poly(t,degree=10,raw=TRUE),data=df.am_walk)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s2.hat <- predict(m2,newdata=df.pred)
# Plot estimated movement trajectory
par(mfrow=c(2,1))
plot(df.am_walk$t,df.am_walk$s1,pch="*",xlab="Time",ylab="Longitude")
points(df.pred$t,df.pred$s1.hat,typ="l",col="gold",lwd=2)
par(mfrow=c(2,1))
plot(df.am_walk$t,df.am_walk$s1,pch="*",xlab="Time",ylab="Longitude")
points(df.pred$t,df.pred$s1.hat,typ="l",col="gold",lwd=2)
plot(df.am_walk$t,df.am_walk$s2,pch="*",xlab="Time",ylab="Latitude")
points(df.pred$t,df.pred$s2.hat,typ="l",col="gold",lwd=2)
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.lm <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
# Visualize
map_leaflet %>%
addCircleMarkers(data = df.am_walk.hat.lm,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat[1:6200,],df.am_walk.hat[2:6201,],by_element=TRUE)
df.am_walk.hat
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat.lm[1:6200,],df.am_walk.hat.lm[2:6201,],by_element=TRUE)
(sum(dist.hat)/1000)*0.62 # Model check. Length of estimated trajectory in miles
speed.hat <- (dist.hat/0.5)*2.24 # units are in miles per hour
plot(df.pred$t[-1],speed.hat,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Comparison to observed data
# Class discussion about what would happen if we collected more location data?
dist <- st_distance(am_walk[1:840,],am_walk[2:841,],by_element=TRUE)
(sum(dist, na.rm = T)/1000)*0.62
speed <- (dist/as.numeric(diff(am_walk$time)))*2.24
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- gam(s1 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- gam(s2 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
# Plot estimated movement trajectory
par(mfrow=c(2,1))
par(mfrow=c(2,1))
plot(df.am_walk$t,df.am_walk$s1,pch="*",xlab="Time",ylab="Longitude")
points(df.pred$t,df.pred$s1.hat,typ="l",col="gold",lwd=2)
plot(df.am_walk$t,df.am_walk$s2,pch="*",xlab="Time",ylab="Latitude")
points(df.pred$t,df.pred$s2.hat,typ="l",col="gold",lwd=2)
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.gam <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.gam <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
df.pred
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.gam <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
am_walk
# Visualize
map_leaflet %>%
addCircleMarkers(data = df.am_walk.hat.gam,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.gam <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
df.pred
df.am_walk.hat.lm
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- gam(s1 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- gam(s2 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s2.hat <- predict(m2,newdata=df.pred)
df.pred
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- lm(s1 ~ poly(t,degree=10,raw=TRUE),data=df.am_walk)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- lm(s2 ~ poly(t,degree=10,raw=TRUE),data=df.am_walk)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s2.hat <- predict(m2,newdata=df.pred)
df.pred
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.lm <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
df.pred
df.pred
df.pred
df.pred
# Visualize
map_leaflet %>%
addCircleMarkers(data = df.am_walk.hat.lm,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat.lm[1:6200,],df.am_walk.hat.lm[2:6201,],by_element=TRUE)
(sum(dist.hat)/1000)*0.62 # Model check. Length of estimated trajectory in miles
speed.hat <- (dist.hat/0.5)*2.24 # units are in miles per hour
plot(df.pred$t[-1],speed.hat,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Comparison to observed data
# Class discussion about what would happen if we collected more location data?
dist <- st_distance(am_walk[1:840,],am_walk[2:841,],by_element=TRUE)
(sum(dist, na.rm = T)/1000)*0.62
speed <- (dist/as.numeric(diff(am_walk$time)))*2.24
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- gam(s1 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- gam(s2 ~ s(t,bs="gp",k=50),data=df.am_walk)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s2.hat <- predict(m2,newdata=df.pred)
# Plot estimated movement trajectory
par(mfrow=c(2,1))
plot(df.am_walk$t,df.am_walk$s1,pch="*",xlab="Time",ylab="Longitude")
points(df.pred$t,df.pred$s1.hat,typ="l",col="gold",lwd=2)
plot(df.am_walk$t,df.am_walk$s2,pch="*",xlab="Time",ylab="Latitude")
points(df.pred$t,df.pred$s2.hat,typ="l",col="gold",lwd=2)
df.pred
am_walk
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.gam <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
# Visualize
map_leaflet %>%
addCircleMarkers(data = df.am_walk.hat.gam,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat.gam[1:6200,],df.am_walk.hat.gam[2:6201,],by_element=TRUE)
(sum(dist.hat)/1000)*0.62 # Model check. Length of estimated trajectory in miles. Should be ~26.2
speed.hat <- (dist.hat/0.5)*2.24 # units are in miles per hour
plot(df.pred$t[-1],speed.hat,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Comparison to observed data
# Class discussion about what would happen if we collected more location data?
dist <- st_distance(am_walk[1:840,],am_walk[2:841,],by_element=TRUE)
(sum(dist, na.rm = T)/1000)*0.62
speed <- (dist/as.numeric(diff(am_walk$time)))*2.24
plot(df.am_walk$t[-1],speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
df.am_walk
plot(df.am_walk.hat.gam$t[-1],speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
df.am_walk.hat.gam
df.am_walk.hat.gam$t
speed
plot(df.am_walk.hat.gam$t[-1],speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
plot(df.am_walk.hat.gam$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
plot(df.am_walk.hat.gam$t[-1],speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Fit model to longitude (s_1) using time (t) as a predictor
m1 <- rpart(s1 ~ t,data=df.am_walk,control=rpart.control(cp = 0.0001))
summary(m1)
# Fit model to latitude (s_1) using time (t) as a predictor
m2 <- rpart(s2 ~ t,data=df.am_walk,control=rpart.control(cp = 0.0001))
summary(m2)
# Estimate movement trajectory at a very fine temporal scale (every 1/2th of a second)
df.pred <- data.frame(t = seq(0,3100,by=0.5))
df.pred$s1.hat <- predict(m1,newdata=df.pred)
df.pred$s2.hat <- predict(m2,newdata=df.pred)
# Write to kml file to view estimated trajectory in google earth pro
df.am_walk.hat.tree <- st_as_sf(df.pred, coords = c("s1.hat", "s2.hat"),
crs = st_crs(am_walk))
# Visualize
map_leaflet %>%
addCircleMarkers(data = df.am_walk.hat.tree,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red")
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat[1:6200,],df.am_walk.hat[2:6201,],by_element=TRUE)
# Show time series of estimated speed
dist.hat <- st_distance(df.am_walk.hat.tree[1:6200,],df.am_walk.hat.tree[2:6201,],by_element=TRUE)
(sum(dist.hat)/1000)*0.62 # Model check. Length of estimated trajectory in miles. Should be ~26.2
speed.hat <- (dist.hat/0.5)*2.24 # units are in miles per hour
plot(df.pred$t[-1],speed.hat,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Comparison to observed data
# Class discussion about what would happen if we collected more location data?
dist <- st_distance(am_walk[1:840,],am_walk[2:841,],by_element=TRUE)
(sum(dist, na.rm = T)/1000)*0.62
speed <- (dist/as.numeric(diff(am_walk$time)))*2.24
plot(df.am_walk$t,speed,xlab="Time (seconds)",ylab="Velocity (miles per hour)")
# Visualize
map_leaflet %>%
addCircleMarkers(data = am_walk,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "black", label = "Observed") %>% # Observed
addCircleMarkers(data = df.am_walk.hat.lm,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "red", label = "Polynomial") %>% # Polynomial
addCircleMarkers(data = df.am_walk.hat.gam,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "green", label = "GAM") %>% # GAM
addCircleMarkers(data = df.am_walk.hat.tree,
radius = 3, stroke = FALSE, fillOpacity = 0.5,
color = "yellow", label = "tree") # Regression tree
url <- "https://www.dropbox.com/scl/fi/slb8wn1np1ntzhaw30z58/Caminata_de_ma_ana.gpx?rlkey=vv5vsiuhoozzc1q0mfbzm2aof&st=ouslm2cu&dl=1"
am_walk <- st_read(dsn=url,layer="track_points")
# Change time to a character
am_walk$time <- as.character(am_walk$time)
# Drop all extra information/data other than location and time
am_walk <- am_walk[,5]
install.packages('rsconnect')
install.packages("rsconnect")
